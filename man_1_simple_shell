SIMPLE SHELL

       hsh - a simple command line interperter


DESCRIPTION

	The shell is a simple command line interperter that executes the command based on user input. The shell does not take any arguments a the time of execution.

OVERVIEW

	The shell prints a prompt to the user, representing that it is ready to accept user input. Commands are read from stdin, so commands that are piped into the shell at execution are also read. commands are processed in the order they are received.

COMMAND FORMAT

		[command] [parameter1] [parameter2]...

	Commands are interpteted using SPACE, NEWLINE or TAB as seperators, there is a hard limit of 127 parameters that may be interpreted.

ORDER OF INPUT

      User input will split into tokens, these tokens will be compared to builtin command, if it matches then it will execute the  builtin command.	 Then user returns to prompt. If the match is not found in builtincommand, then tokens will be compared to executables in PATH or in PWD. If the match is found in excutables, then execute the command and usereturn to the prompt.

      If the match is not found in both  builtin command and executables in PATH or PWD, then it prints Error Message and user return to the prompt.

BUILTIN COMMANDS

	The following commands are built into the shell and do not rely on the corresponding program being present on the system.

CD - 	cd [path]
   Changes the current working directory to the specified directory.

ENV - 	env
    Prints environmental variables

EXIT - 	exit
     Exits the shell

EXECUTION

	If executable is found, the shell forks into a child process where the command is executable following any arguments. The shell returns the output of the given command and it terminates the child process while the parent process waits for the child process to be terminated.

	Shell will re-prompt a new line waiting for the next user input.

BUGS
	If a command fails the shell may exit with status 0 when status 2 should be expected

AUTHORS
Ruslan Shamoyev
Islam Quliyev
